swagger: "2.0"
info:
  title: beego Test API
  description: beego has a very cool tools to autogenerate documents for your API
  version: 1.0.0
  termsOfService: http://beego.me/
  contact:
    email: astaxie@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
basePath: /v1
paths:
  /filtroContrato/:
    get:
      tags:
      - filtroContrato
      description: get Contatoscontrato
      operationId: ContatoscontratoController.GetAll
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Contatoscontrato'
        "403":
          description: ""
    post:
      tags:
      - filtroContrato
      description: create Contatoscontrato
      operationId: ContatoscontratoController.Create
      parameters:
      - in: body
        name: body
        description: body for Contatoscontrato content
        required: true
        schema:
          $ref: '#/definitions/models.Contatoscontrato'
      responses:
        "201":
          description: ""
          schema:
            $ref: '#/definitions/models.Contatoscontrato'
        "403":
          description: body is empty
  /filtroProveedor/:
    get:
      tags:
      - filtroProveedor
      description: get ContratosProveedor
      operationId: ContratosProveedorController.GetAll
      parameters:
      - in: query
        name: ProvID
        description: ID del Proveedor
        required: true
        type: string
      - in: query
        name: SupID
        description: ID del supervisor
        required: true
        type: string
      responses:
        "200":
          description: '{}'
        "404":
          description: not found resource
    post:
      tags:
      - filtroProveedor
      description: create ContratosProveedor
      operationId: ContratosProveedorController.Create
      parameters:
      - in: body
        name: body
        description: body for ContratosProveedor content
        required: true
        schema:
          $ref: '#/definitions/{}'
      responses:
        "200":
          description: '{}'
        "404":
          description: not found resource
  /object/:
    get:
      tags:
      - object
      description: get ContratosProveedor
      operationId: ObjectController.GetAll
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ContratosProveedor'
        "403":
          description: ""
    post:
      tags:
      - object
      description: create object
      operationId: ObjectController.Create
      parameters:
      - in: body
        name: body
        description: The object content
        required: true
        schema:
          $ref: '#/definitions/models.Object'
      responses:
        "200":
          description: '{string} models.Object.Id'
        "403":
          description: body is empty
  /object/{objectId}:
    put:
      tags:
      - object
      description: update the object
      operationId: ObjectController.Update
      parameters:
      - in: path
        name: objectId
        description: The objectid you want to update
        required: true
        type: string
      - in: body
        name: body
        description: The body
        required: true
        schema:
          $ref: '#/definitions/models.Object'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Object'
        "403":
          description: :objectId is empty
    delete:
      tags:
      - object
      description: delete the object
      operationId: ObjectController.Delete
      parameters:
      - in: path
        name: objectId
        description: The objectId you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: objectId is empty
definitions:
  '{}':
    title: '{}'
    type: object
  models.Contatoscontrato:
    title: Contatoscontrato
    type: object
  models.ContratosProveedor:
    title: ContratosProveedor
    type: object
  models.Object:
    title: Object
    type: object
    properties:
      ObjectId:
        type: string
      PlayerName:
        type: string
      Score:
        type: integer
        format: int64
  models.Profile:
    title: Profile
    type: object
    properties:
      Address:
        type: string
      Age:
        type: integer
        format: int64
      Email:
        type: string
      Gender:
        type: string
  models.User:
    title: User
    type: object
    properties:
      Id:
        type: string
      Password:
        type: string
      Profile:
        $ref: '#/definitions/models.Profile'
      Username:
        type: string
tags:
- name: object
  description: |
    Operations about object
- name: filtroContrato
  description: |
    ContatoscontratoController operations for Contatoscontrato
- name: filtroProveedor
  description: |
    ContratosProveedorController operations for ContratosProveedor
